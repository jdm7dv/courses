objectvar save_window_, rvp_
objectvar scene_vector_[11]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin CellBuild[0]
{
load_file("celbild.hoc", "CellBuild")
}
{ocbox_ = new CellBuild(1)}
{object_push(ocbox_)}
{
version(1)
continuous = 1
}
{object_push(topol)}
{
first = 0
slist.remove_all()
sname = "right"
objref tobj
}
{
tobj = new CellBuildSection("left",0, 0, tobj, 0) slist.append(tobj)
  tobj.position(-60,0,30,0) tobj.lx=-10.9354 tobj.ly=-14.9043 tobj.i3d=0
tobj = new CellBuildSection("gap",0, 0, tobj, 1) slist.append(tobj)
tobj.parent=slist.object(0)
  tobj.position(30,0,30,30) tobj.lx=30 tobj.ly=15 tobj.i3d=0
tobj = new CellBuildSection("right",0, 0, tobj, 1) slist.append(tobj)
tobj.parent=slist.object(1)
  tobj.position(30,30,120,60) tobj.lx=75 tobj.ly=45 tobj.i3d=0
}
for i=0, slist.count-1 {slist.object(i).rdses()}
{object_pop()}
{
}
{object_push(subsets)}
{first = 0}
{tobj = new SNList("all") snlist.append(tobj)}
for i=0,2 tobj.add(bild.topol.slist.object(fscan()))
0
1
2
{tobj = new SNList("axons") snlist.append(tobj)}
for i=0,1 tobj.add(bild.topol.slist.object(fscan()))
0
2
{object_pop()}
{
}
{object_push(geom)}
{
first = 0
tobj = new GeoSpec(0)
tobj.value = 1000
bild.subsets.snlist.object(1).geo.append(tobj)
tobj = new GeoSpec(1)
tobj.value = 1
bild.subsets.snlist.object(1).geo.append(tobj)
tobj = new GeoSpec(5)
tobj.value = 0.1
bild.subsets.snlist.object(1).geo.append(tobj)
tobj = new GeoSpec(2)
tobj.value = 100
bild.topol.slist.object(1).geo.append(tobj)
set_default()
}
{object_pop()}
{
{
save_window_=geom.g
save_window_.size(-200,200,-150,150)
scene_vector_[2] = save_window_
geom.g = save_window_
save_window_.save_name("geom.g")
}
}
{object_push(memb)}
{first=0}
{
tobj = new MechanismStandard("hh")
tobj.set("gnabar_hh", 0.12, 0)
tobj.set("gkbar_hh", 0.036, 0)
tobj.set("gl_hh", 0.0003, 0)
tobj.set("el_hh", -54.3, 0)
tobj = new MStanWrap(tobj, 1)
bild.subsets.snlist.object(1).ml.append(tobj)
}
{
tobj = new GeoSpec(0)
tobj.value = 35
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.subsets.snlist.object(1).ml.append(tobj)
}
{
tobj = new GeoSpec(1)
tobj.value = 1e-06
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.topol.slist.object(1).ml.append(tobj)
}
{
tobj = new MechanismStandard("extracellular")
tobj.set("xraxial", 1e+09, 0)
tobj.set("xg", 0, 0)
tobj.set("xc", 0, 0)
tobj.set("e_extracellular", 0, 0)
tobj = new MStanWrap(tobj, 1)
bild.topol.slist.object(1).ml.append(tobj)
}
{
tobj = new GeoSpec(0)
tobj.value = 1e+09
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.topol.slist.object(1).ml.append(tobj)
}
{object_pop()}
{
}
{object_push(manage)}
{
first = 0
classname = "Cell"
etop=1 esub=1 egeom=1 emem=1
itop=1 isub=0 igeom=0 imem=0
bild.topol.names_off = 0
bild.topol.circles_off = 0
}
{object_pop()}
{
cexport()
}
{
save_window_=gtopol
save_window_.size(-200,200,-150,150)
scene_vector_[2] = save_window_
gtopol = save_window_
save_window_.save_name("gtopol")
}
{object_pop()}
{
ocbox_.map("CellBuild[0]", 143, 100, 822.72, 374.4)
}
objref ocbox_
//End CellBuild[0]

{WindowMenu[0].ses_gid(1, 0, 0, "Section Structure")}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
left ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("IClamp") i = mt.selected()
ms[i] = new MechanismStandard("IClamp")
ms[i].set("del", 0, 0)
ms[i].set("dur", 0.1, 0)
ms[i].set("amp", 1, 0)
mt.select("IClamp") i = mt.selected() maction(i)
hoc_ac_ = 0
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 22, 534, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{WindowMenu[0].ses_gid(0, 1, 1, "control")}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
gap ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("RectifyingGapJunction") i = mt.selected()
ms[i] = new MechanismStandard("RectifyingGapJunction")
ms[i].set("g", 1, 0)
mt.select("RectifyingGapJunction") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 308, 139, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{WindowMenu[0].ses_gid(0, 2, 1, "gap")}

//Begin LinearCircuit[0]
{
load_file("lincir.hoc", "LinearCircuit")
}
{
ocbox_ = new LinearCircuit(1)
}
{object_push(ocbox_)}
{mkelm(7, 110, 50, 2, 0)}
{mklabel(0, "left(1)", 6.042, -11.218)}
{sel.extra_info.set("left", 1) sel.extra_info.name(sel)}
{mkelm(7, 210, 50, 2, 0)}
{mklabel(0, "right(0)", 3.863, -14.0951)}
{sel.extra_info.set("right", 0) sel.extra_info.name(sel)}
{mkelm(8, 160, 120, 2, 0)}
{mklabel(0, "gap(0.5)", 6.793, 36.583)}
{sel.extra_info.set("gap", 0.5) sel.extra_info.name(sel)}
{mkelm(3, 125, 95, 2.91548, 1.03038)}
{mklabel(0, "B1", -21.425, 13.791)}
{sel.extra_info.restore()}
3
1e+09 0
1e+09 0
1e+09 0
{mkelm(3, 195, 95, 2.91548, -1.03038)}
{mklabel(0, "B2", 27.495, 10.914)}
{sel.extra_info.restore()}
3
1e+09 0
1e+09 0
1e+09 0
{g.exec_menu("Simulate")}
{sel = nil}
{object_pop()}
{
{
save_window_=ocbox_.g
save_window_.size(0,300,0,200)
scene_vector_[5] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.label(116.042, 38.782, "left(1)", 1, 1, 0.5, 0.5, 1)
save_window_.label(213.863, 35.9049, "right(0)", 1, 1, 0.5, 0.5, 1)
save_window_.label(166.793, 156.583, "gap(0.5)", 1, 1, 0.5, 0.5, 1)
save_window_.label(103.575, 108.791, "B1", 1, 1, 0.5, 0.5, 1)
save_window_.label(222.495, 105.914, "B2", 1, 1, 0.5, 0.5, 1)
}
ocbox_.map("LinearCircuit[0]", 391, 48, 438.72, 257.28)
}
objref ocbox_
//End LinearCircuit[0]

{WindowMenu[0].ses_gid(0, 2, 1, "gap")}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 10
xvalue("t","t", 2 )
tstop = 10
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 5
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(23,135)
}
{WindowMenu[0].ses_gid(0, 1, 1, "control")}
{
save_window_ = new Graph(0)
save_window_.size(0,2100,-80,40)
scene_vector_[9] = save_window_
{save_window_.view(0, -80, 2100, 120, 317, 620, 300.48, 200.32)}
flush_list.append(save_window_)
save_window_.save_name("flush_list.")
objectvar rvp_
rvp_ = new RangeVarPlot("v")
left rvp_.begin(0)
left rvp_.end(1)
rvp_.origin(0)
save_window_.addobject(rvp_, 2, 1, 0.8, 0.9)
objectvar rvp_
rvp_ = new RangeVarPlot("v")
right rvp_.begin(0)
right rvp_.end(1)
rvp_.origin(1005.64)
save_window_.addobject(rvp_, 3, 1, 0.8, 0.9)
}
{WindowMenu[0].ses_gid(0, 3, 1, "graphs")}
{
save_window_ = new Graph(0)
save_window_.size(0,10,-80,40)
scene_vector_[10] = save_window_
{save_window_.view(0, -80, 10, 120, 325, 352, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("gap.v( 0.5 )", 1, 1, 0.528435, 1.07732, 2)
save_window_.addexpr("left.v(.99 )", 2, 1, 0.534824, 1.07732, 2)
save_window_.addexpr("right.v( 0.01)", 3, 1, 0.531629, 1.0869, 2)
}
{WindowMenu[0].ses_gid(0, 3, 1, "graphs")}
objectvar scene_vector_[1]
{doNotify()}
