objectvar save_window_, rvp_
objectvar scene_vector_[5]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("SEClamp") i = mt.selected()
ms[i] = new MechanismStandard("SEClamp")
ms[i].set("rs", 0.1, 0)
ms[i].set("dur1", 0, 0)
ms[i].set("amp1", 0, 0)
ms[i].set("dur2", 100, 0)
ms[i].set("amp2", 109, 0)
ms[i].set("dur3", 0, 0)
ms[i].set("amp3", 0, 0)
mt.select("SEClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 127, 251, 224.64, 287.04)
}
objref ocbox_
//End PointProcessManager


//Begin Insert/Remove Mechanisms
{
load_file("inserter.hoc", "Inserter")
}
{
soma ocbox_ = new Inserter(0)
}
{object_push(ocbox_)}
{
mt.select("khh") i = mt.selected()
ms[i] = new MechanismStandard("khh")
ms[i].set("gbar_khh", 22, 0)
mstate[i]= 1
maction(i)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("Insert/Remove Mechanisms", 378, 248, 93.12, 111.36)
}
objref ocbox_
//End Insert/Remove Mechanisms

{
xpanel("RunControl", 0)
v_init = 0
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 12
xvalue("t","t", 2 )
tstop = 12
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(375,396)
}
objectvar scene_vector_[1]
{doNotify()}
