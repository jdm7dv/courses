objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}

//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
dend ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("AlphaSynapse") i = mt.selected()
ms[i] = new MechanismStandard("AlphaSynapse")
ms[i].set("onset", 0, 0)
ms[i].set("tau", 1, 0)
ms[i].set("gmax", 0.0112325, 0)
ms[i].set("e", 0, 0)
mt.select("AlphaSynapse") i = mt.selected() maction(i)
hoc_ac_ = 1
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 80, 475, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("APCount") i = mt.selected()
ms[i] = new MechanismStandard("APCount")
ms[i].set("n", 1, 0)
ms[i].set("thresh", -20, 0)
ms[i].set("time", 9, 0)
mt.select("APCount") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 309, 475, 208.32, 326.4)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 15
xvalue("t","t", 2 )
tstop = 15
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(6,83)
}
{
xpanel("VariableTimeStep", 0)
xcheckbox("Use variable dt",&using_cvode_,"cvode_active()")
xcheckbox("Local variable dt",&use_lvardt_,"cvode_local()")
atol_ = 0.002
xvalue("Absolute Tolerance","atol_", 1,"cvode.atol(atol_)", 0, 0 )
xpanel(308,84)
}
{
save_window_ = new Graph(0)
save_window_.size(0,15,-80,40)
scene_vector_[3] = save_window_
{save_window_.view(0, -80, 15, 120, 308, 210, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}

//Begin Grapher
{
load_file("grapher.hoc")}
{
ocbox_=new Grapher(1)

ocbox_.info("taper","taper", "hhtaper(taper) threshold(&AlphaSynapse[0].gmax)", -0.04, 1, -0.002, 0.03, 5, 0, 1)
{
save_window_=ocbox_.g
save_window_.size(-0.04,1,-0.002,0.03)
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.xexpr("taper", 0)
save_window_.addvar("AlphaSynapse[0].gmax", 1, 1, 0.445368, 0.962226, 2)
}
ocbox_ = ocbox_.vbox
ocbox_.map("Grapher", 637, 210, 308.16, 453.12)
}
objref ocbox_
//End Grapher

objectvar scene_vector_[1]
{doNotify()}
