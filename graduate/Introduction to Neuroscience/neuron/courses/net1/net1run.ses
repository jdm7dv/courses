load_file("nrngui.hoc")
objectvar save_window_, rvp_
objectvar scene_vector_[4]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ArtCellGUI[0]
{
load_file("netbild.hoc")
}
ocbox_ = new ArtCellGUI(1)
{object_push(ocbox_)}
{
tobj = new MechanismStandard("IntFire1")
tobj.set("tau", 10, 0)
tobj.set("refrac", 5, 0)
}
{append(tobj, "C")}
{
tobj = new MechanismStandard("NetStim")
tobj.set("interval", 10, 0)
tobj.set("number", 10, 0)
tobj.set("start", 50, 0)
tobj.set("noise", 0, 0)
}
{append(tobj, "S")}
{object_pop()}
{
ocbox_.map("ArtCellGUI[0]", 319, 105, 408.96, 290.88)
}
objref ocbox_
//End ArtCellGUI[0]


//Begin NetGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetGUI(1)}
{object_push(ocbox_)}
{mapold2new = new Vector()  missing = new List()}
original_type("C")
original_type("S")
newnode(1, -62, 4)
newnode(0, 196, 0)
newedge(0, 1, 0, 2, 1)
{create_ = 1  create1()}
{g.size(-1070.58,1070.58,-1098.43,1098.43)}
{object_pop()}
{
ocbox_.map("NetGUI[0]", 318, 437, 411.84, 318.72)
}
objref ocbox_
//End NetGUI[0]


//Begin SpikePlot[0] for NetData[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new SpikePlot(NetData[0],1)}
{object_push(ocbox_)}
mode = 1
fwindow = 100
binwidth = 0.1
build()
{g.size(0,1000,-8.9407e-08,3)}
{object_pop()}
{
ocbox_.map("SpikePlot[0] for NetData[0]", 761, 104, 304.32, 333.12)
}
objref ocbox_
//End SpikePlot[0] for NetData[0]

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 38136.2
xvalue("t","t", 2 )
tstop = 1000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(22,105)
}

//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
ocbox_ = ocbox_.b1
ocbox_.map("VariableTimeStep", 19, 500, 272.64, 106.56)
}
objref ocbox_
//End VariableTimeStep

objectvar scene_vector_[1]
{doNotify()}
